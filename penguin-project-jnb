{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#import libraries\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "from sklearn import tree, preprocessing, metrics\n",
    "from sklearn.model_selection import train_test_split, cross_val_score\n",
    "from sklearn.linear_model import LogisticRegression, LogisticRegressionCV\n",
    "from sklearn.metrics import roc_auc_score, roc_curve\n",
    "from sklearn.feature_selection import f_classif\n",
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import plot_confusion_matrix\n",
    "from itertools import combinations, product\n",
    "from statistics import mean\n",
    "from sklearn.feature_selection import f_classif\n",
    "import itertools"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we will read in and clean the data. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def clean_data(penguins):\n",
    "    \"\"\"\n",
    "    Cleans the penguins data. \n",
    "    \"\"\"\n",
    "    # Dropping unneeded columns and rows\n",
    "    penguins = penguins.drop(['studyName', 'Sample Number', 'Individual ID', \n",
    "                              'Date Egg', 'Comments', 'Region'], axis = 1)\n",
    "    penguins = penguins.dropna()\n",
    "\n",
    "    # Recoding and cleaning Sex column\n",
    "    recode1 = {\"MALE\"  : 0, \"FEMALE\" : 1, \".\" : 2}\n",
    "    penguins[\"Sex\"] = penguins[\"Sex\"].map(recode1)\n",
    "    penguins = penguins[penguins['Sex'] != 2]\n",
    "\n",
    "    # Recoding Island column\n",
    "    recode2 = {'Biscoe'  : 0, 'Dream' : 1, 'Torgersen'  : 3}\n",
    "    penguins[\"Island\"] = penguins[\"Island\"].map(recode2)\n",
    "    \n",
    "    # Cleaning species column\n",
    "    penguins[\"Species\"] = penguins[\"Species\"].str.split().str.get(0)\n",
    "    \n",
    "    le = preprocessing.LabelEncoder()\n",
    "    #stage\n",
    "    penguins['Stage'] = le.fit_transform(penguins['Stage'])\n",
    "    #clutch competition\n",
    "    penguins['Clutch Completion'] = le.fit_transform(penguins['Clutch Completion'])\n",
    "\n",
    "    \n",
    "    return penguins"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"https://philchodrow.github.io/PIC16A/datasets/palmer_penguins.csv\"\n",
    "penguins = pd.read_csv(url)\n",
    "myData = penguins\n",
    "penguins = clean_data(penguins)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Species</th>\n",
       "      <th>Island</th>\n",
       "      <th>Stage</th>\n",
       "      <th>Clutch Completion</th>\n",
       "      <th>Culmen Length (mm)</th>\n",
       "      <th>Culmen Depth (mm)</th>\n",
       "      <th>Flipper Length (mm)</th>\n",
       "      <th>Body Mass (g)</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Delta 15 N (o/oo)</th>\n",
       "      <th>Delta 13 C (o/oo)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Adelie</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>39.5</td>\n",
       "      <td>17.4</td>\n",
       "      <td>186.0</td>\n",
       "      <td>3800.0</td>\n",
       "      <td>1</td>\n",
       "      <td>8.94956</td>\n",
       "      <td>-24.69454</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Adelie</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>40.3</td>\n",
       "      <td>18.0</td>\n",
       "      <td>195.0</td>\n",
       "      <td>3250.0</td>\n",
       "      <td>1</td>\n",
       "      <td>8.36821</td>\n",
       "      <td>-25.33302</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Adelie</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>36.7</td>\n",
       "      <td>19.3</td>\n",
       "      <td>193.0</td>\n",
       "      <td>3450.0</td>\n",
       "      <td>1</td>\n",
       "      <td>8.76651</td>\n",
       "      <td>-25.32426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Adelie</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>39.3</td>\n",
       "      <td>20.6</td>\n",
       "      <td>190.0</td>\n",
       "      <td>3650.0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.66496</td>\n",
       "      <td>-25.29805</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Adelie</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>38.9</td>\n",
       "      <td>17.8</td>\n",
       "      <td>181.0</td>\n",
       "      <td>3625.0</td>\n",
       "      <td>1</td>\n",
       "      <td>9.18718</td>\n",
       "      <td>-25.21799</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Species  Island  Stage  Clutch Completion  Culmen Length (mm)  \\\n",
       "1  Adelie       3      0                  1                39.5   \n",
       "2  Adelie       3      0                  1                40.3   \n",
       "4  Adelie       3      0                  1                36.7   \n",
       "5  Adelie       3      0                  1                39.3   \n",
       "6  Adelie       3      0                  0                38.9   \n",
       "\n",
       "   Culmen Depth (mm)  Flipper Length (mm)  Body Mass (g)  Sex  \\\n",
       "1               17.4                186.0         3800.0    1   \n",
       "2               18.0                195.0         3250.0    1   \n",
       "4               19.3                193.0         3450.0    1   \n",
       "5               20.6                190.0         3650.0    0   \n",
       "6               17.8                181.0         3625.0    1   \n",
       "\n",
       "   Delta 15 N (o/oo)  Delta 13 C (o/oo)  \n",
       "1            8.94956          -24.69454  \n",
       "2            8.36821          -25.33302  \n",
       "4            8.76651          -25.32426  \n",
       "5            8.66496          -25.29805  \n",
       "6            9.18718          -25.21799  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "penguins.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Exploratory Figures and Table\n",
    "In this next section, we are going to use tables and figures to get a first look into seeing what columns we might want to use to train our model."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Figure 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0.98, 'Culmen Depth vs Culmen Length')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1)\n",
    "species = set(penguins['Species'])\n",
    "\n",
    "for s in species:\n",
    "    i = penguins[penguins['Species'] == s]\n",
    "    ax.scatter(i['Culmen Length (mm)'], i['Culmen Depth (mm)'], label = s)\n",
    "    \n",
    "ax.legend()\n",
    "\n",
    "ax.set(xlabel = 'Culmen Length (mm)',\n",
    "       ylabel = 'Culmen Depth (mm)')\n",
    "\n",
    "fig.suptitle('Culmen Depth vs Culmen Length', fontsize=15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This scatter plot tells us that culmen depth and culmen length correlation for each species. We can see that relative to the other penguins, the Chinstrap penguins have a high culmen length and depth, Gentoo penguins have a low culmen depth but high culmen length, and the Adelie penguins have a high culmen depth but low culmen length. This figure shows us that culmen depth and culmen length may good columns to use as there each species is grouped up and can be somewhat separated with these two qualities. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Figure 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "Empty DataFrame\n",
       "Columns: []\n",
       "Index: []"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1)\n",
    "\n",
    "def plot_box(df):\n",
    "    ax.boxplot(df['Flipper Length (mm)'])\n",
    "\n",
    "penguins.groupby(\"Species\").apply(plot_box)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ad = penguins[penguins[\"Species\"] == \"Adelie\"][\"Flipper Length (mm)\"] # 190\n",
    "ch = penguins[penguins[\"Species\"] == \"Chinstrap\"][\"Flipper Length (mm)\"] # 2\n",
    "ge = penguins[penguins[\"Species\"] == \"Gentoo\"][\"Flipper Length (mm)\"] # 3, tallest\n",
    "\n",
    "fig, ax = plt.subplots(1)\n",
    "\n",
    "bp = ax.boxplot([ad, ch, ge])\n",
    "l = ax.set(ylabel = \"Flipper Length\", title = \"Flipper Length by Species\")\n",
    "xl = plt.xticks([1, 2, 3], [\"Adelie\", \"Chinstrap\", \"Gentoo\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Though we ended up using the column combination of Island, Culmen Length, and Culmen Depth, as the output of the top 10 best column combinations showed, there were other options that we could have chosen. One of the columns that showed up repeatedly as a good predictors of species (that we did not end up using) was Flipper Length. In this boxplot graph, I examined how well Flipper Length can predict Species. As you can see in the results, knowing a penguin's flipper length can likely help in determining whether or not a penguin is of the Gentoo species. However, Flipper Length would not be that helpful in determining whether or not a pegnuin belongs to the Adelie or Chinstrap species.  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Figure 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7fb3af7d35b0>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "myData[\"Species\"] = myData[\"Species\"].str.split().str.get(0)\n",
    "\n",
    "fig.set_figheight(15)\n",
    "fig.set_figwidth(10)\n",
    "\n",
    "fig, ax = plt.subplots(1)\n",
    "species = set(myData['Species'])\n",
    "location = set(myData['Island'])\n",
    "\n",
    "ax.set(xlabel = 'Flipper Length', \n",
    "       ylabel = 'Density', \n",
    "       title = 'Species by Island and Flipper Length')\n",
    "\n",
    "for s in species: \n",
    "    i = myData[myData['Species'] == s]\n",
    "    for l in location:\n",
    "        t = i[i['Island'] == l]\n",
    "        ax.hist(t['Flipper Length (mm)'], label = str(s) + ', ' + str(l) , alpha = 0.5)\n",
    "        ax.set_xlim([160,240])\n",
    "\n",
    "ax.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This graph shows us the correlation between the flipper length of each species on seperated by island. However this graph is really convoluted and we cannot see the data clearly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x1080 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(3)\n",
    "species = set(myData['Species'])\n",
    "location = set(myData['Island'])\n",
    "\n",
    "fig.set_figheight(15)\n",
    "fig.set_figwidth(10)\n",
    "\n",
    "count = 0\n",
    "for l in location: \n",
    "   \n",
    "    for s in species:\n",
    "        i = myData[myData['Species'] == s]\n",
    "        t = i[i['Island'] == l]\n",
    "        ax[count].hist(t['Flipper Length (mm)'], label = str(s), alpha = 0.65)\n",
    "    ax[count].legend()\n",
    "    ax[count].set(xlabel = 'Flipper Length (mm)', ylabel = 'Density')\n",
    "    ax[count].set_title(str(l) + ' Island')\n",
    "    ax[count].set_xlim([160,240])\n",
    "    count += 1\n",
    "plt.tight_layout()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When we seperate the penguins by island, we are able to get a clearer view of what penguin is where. We can see that Adelie penguin is on all 3 islands. However the Chinstrap is only on Dream island, and the Gentoo is only on Biscoe. As the Adelie is on all 3 islands, we can see that its flipper length remains the relatively the same on each island. However, factors such as competition will cause changes the bell curve. There is more of a spread on Biscoe where the Adelie must compete with the larger Gentoo. We can also see that the Adelie and Chinstrap have are similar in size so the bell curve remains tight. These graphs can tell us that island may be able to help us predict the species. The flipper length will also be able to help differentiate the Gentoo from the other two but the Adelie and Chinstrap are relatively the same size. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table Part 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Stage</th>\n",
       "      <th>Clutch Completion</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Body Mass (g)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>324.0</td>\n",
       "      <td>324.000000</td>\n",
       "      <td>324.000000</td>\n",
       "      <td>324.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.895062</td>\n",
       "      <td>0.503086</td>\n",
       "      <td>4213.966049</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.306948</td>\n",
       "      <td>0.500764</td>\n",
       "      <td>809.277529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2700.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3550.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4050.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>4800.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6300.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Stage  Clutch Completion         Sex  Body Mass (g)\n",
       "count  324.0         324.000000  324.000000     324.000000\n",
       "mean     0.0           0.895062    0.503086    4213.966049\n",
       "std      0.0           0.306948    0.500764     809.277529\n",
       "min      0.0           0.000000    0.000000    2700.000000\n",
       "25%      0.0           1.000000    0.000000    3550.000000\n",
       "50%      0.0           1.000000    1.000000    4050.000000\n",
       "75%      0.0           1.000000    1.000000    4800.000000\n",
       "max      0.0           1.000000    1.000000    6300.000000"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_col = penguins[[ 'Species','Stage', 'Clutch Completion', 'Sex', 'Body Mass (g)']]\n",
    "my_col.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this table, we are looking at the chart characteristics \"Stage\", \"Clutch Completion\", \"Sex\", \"Body Mass(g)\". From this chart we can sese that the column \"Stage\" would be a terrible factor to consider as it does not provide any data to help differentiate the species. The min and max are the same value. This means the only value in the column is the value 0, which represents the adult penguins. This column only shows that all the penguins are adults and does not help differentiate the species. For sex, it seems that the amount of male and female penguins is evenly distributed and that shows none of the penguin species are skewed a certain way. From this, we could conclude that sex would not be a good factor to include in our comparison. For clutch completion the data binarized and it does seem to be skewed toward. This might show that one species may have a high clutch completion. Therefore, compared to the other factors, this would be a stronger indicator of species. Last we have the body mass. The body mass might be the best indicator because it has the highest standard deviation. We can assume that this is due to the different species being different sizes. The body mass column is different from the other columns as the data is numerical and not just binarized. The more nunanced information will allow our models to be more specific. Overall, from this table we can infer that body mass and clutch completition will be strong indicators of species while stage and sex will not be as helpful. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Table Part 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Stage</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Clutch Completion</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Sex</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Body Mass (g)</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Species</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Adelie</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.906475</td>\n",
       "      <td>0.292220</td>\n",
       "      <td>0.510791</td>\n",
       "      <td>0.501691</td>\n",
       "      <td>3702.697842</td>\n",
       "      <td>460.167844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chinstrap</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.791045</td>\n",
       "      <td>0.409631</td>\n",
       "      <td>0.507463</td>\n",
       "      <td>0.503718</td>\n",
       "      <td>3729.850746</td>\n",
       "      <td>386.300411</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Gentoo</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.940678</td>\n",
       "      <td>0.237234</td>\n",
       "      <td>0.491525</td>\n",
       "      <td>0.502060</td>\n",
       "      <td>5091.101695</td>\n",
       "      <td>503.402158</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Stage      Clutch Completion                 Sex            \\\n",
       "           mean  std              mean       std      mean       std   \n",
       "Species                                                                \n",
       "Adelie        0  0.0          0.906475  0.292220  0.510791  0.501691   \n",
       "Chinstrap     0  0.0          0.791045  0.409631  0.507463  0.503718   \n",
       "Gentoo        0  0.0          0.940678  0.237234  0.491525  0.502060   \n",
       "\n",
       "          Body Mass (g)              \n",
       "                   mean         std  \n",
       "Species                              \n",
       "Adelie      3702.697842  460.167844  \n",
       "Chinstrap   3729.850746  386.300411  \n",
       "Gentoo      5091.101695  503.402158  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_col.groupby('Species').aggregate([np.mean, np.std])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The table above is similar to the previous table as we are looking at some statistics about the \"Stage\", \"Clutch Completion\", \"Sex\", \"Body Mass(g)\" columns. However here we have the data grouped by the species. The table above supports our some previous inferences. This table repeats that the stage shows no data at all as all penguins are at the same stage of life. The sex distribution between each species is very similar and lack any difference. We were also correct that body mass has more defined differences between each species. With the clutch completion, the data shows that this factor is stronger the stage and sex but not as strong for the body mass. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Finding the ideal combination using sklearn\n",
    "We are now going to find the ideal combination of columns with the tools from our sklearn kit. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('Island', 'Stage', 'Culmen Length (mm)'),\n",
       " ('Island', 'Stage', 'Culmen Depth (mm)'),\n",
       " ('Island', 'Stage', 'Flipper Length (mm)'),\n",
       " ('Island', 'Stage', 'Body Mass (g)'),\n",
       " ('Island', 'Stage', 'Sex')]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting all possible combinations\n",
    "\n",
    "names = list(penguins.columns)[1:]\n",
    "combos = list(combinations(names, 3))\n",
    "\n",
    "combos[1:6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#list to hold the scores\n",
    "dtm_score = []\n",
    "lrm_score = []\n",
    "mlpm_score = []\n",
    "\n",
    "#lists to hold depths and complexities\n",
    "t_depth = []\n",
    "lr_c = []\n",
    "mlp_depths = []"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Training Data using Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#using tree to select cols for using decision tree\n",
    "def check_column_score(cols):\n",
    "    \"\"\"\n",
    "    Trains and evaluates a model via cross-validation on the columns of the data\n",
    "    with selected indices\n",
    "    \"\"\"\n",
    "    T = tree.DecisionTreeClassifier(max_depth = 5)\n",
    "    return cross_val_score(T, x_train[cols], y_train, cv = 5).mean()  \n",
    "\n",
    "\n",
    "def test_column_score(tupCol):\n",
    "    \"\"\"\n",
    "    Trains and evaluates a model on the test set using the columns of the data\n",
    "    with selected indices\n",
    "    \"\"\"\n",
    "    cols = list(tupCol)\n",
    "    T = tree.DecisionTreeClassifier(max_depth = 5)\n",
    "    T.fit(x_train[cols], y_train)\n",
    "    return T.score(x_test[cols], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#functions to find the best depths and complexities for each model\n",
    "def tree_best_depth(): \n",
    "    '''\n",
    "    prints a graph showing the depth for a decision tree model\n",
    "    returns the best depth and training score\n",
    "    '''\n",
    "    fig, ax = plt.subplots(1, figsize = (10, 7))\n",
    "    best_score = 0\n",
    "    for d in range(1,30):\n",
    "        T = tree.DecisionTreeClassifier(max_depth = d)\n",
    "        cv_score = cross_val_score(T, X_train, y_train, cv=10).mean()\n",
    "        ax.scatter(d, cv_score, color = \"black\")\n",
    "\n",
    "        if cv_score > best_score:\n",
    "            best_depth = d\n",
    "            best_score = cv_score\n",
    "\n",
    "    l = ax.set(title = \"Best Depth : \" + str(best_depth),\n",
    "           xlabel = \"Depth\", \n",
    "           ylabel = \"CV Score\")\n",
    "    return best_depth, best_score\n",
    "\n",
    "def best_complex():\n",
    "    '''\n",
    "    prints a graph showing the complexity for a logistic regression model\n",
    "    returns the best complexity and training score\n",
    "    '''\n",
    "    #test best complexity for logistic regresssion\n",
    "    fig, ax = plt.subplots(1, figsize = (10, 7))\n",
    "    lr_best_score = 0\n",
    "\n",
    "    #comp is short for complexity \n",
    "    for comp in np.linspace(0.1, 2, 41):\n",
    "        #range(1,30)\n",
    "        logreg = LogisticRegression(max_iter = 1000, C = comp)\n",
    "        cv_score = cross_val_score(logreg, X_train, y_train, cv=10).mean()\n",
    "        ax.scatter(comp, cv_score, color = \"black\")\n",
    "\n",
    "        if cv_score > lr_best_score:\n",
    "            best_comp = comp\n",
    "            lr_best_score = cv_score\n",
    "\n",
    "\n",
    "    l = ax.set(title = \"Best Complexity : \" + str(best_comp),\n",
    "           xlabel = \"Complexity\", \n",
    "           ylabel = \"CV Score\")\n",
    "    \n",
    "    return best_comp, best_score\n",
    "\n",
    "def mlp_depth():\n",
    "    '''\n",
    "    prints a graph showing the depth for a MLP model\n",
    "    returns the best depth and training score\n",
    "    '''\n",
    "    fig, ax = plt.subplots(1)\n",
    "    mlp_best_score = 0\n",
    "\n",
    "    # For 30 depths, find the highest score to find the best depth\n",
    "    for d in range(1,30):\n",
    "        clf = MLPClassifier(hidden_layer_sizes=(d, d, d), max_iter=3000)\n",
    "        cv_score = cross_val_score(clf, X_train, y_train, cv=10).mean()\n",
    "        ax.scatter(d, cv_score, color = \"black\")\n",
    "        if cv_score > mlp_best_score:\n",
    "            mlp_best_depth = d\n",
    "            mlp_best_score = cv_score\n",
    "\n",
    "    l = ax.set(title = \"Best Depth : \" + str(mlp_best_depth),\n",
    "    xlabel = \"Depth\",\n",
    "    ylabel = \"CV Score\")\n",
    "    \n",
    "    return mlp_best_score, mlp_best_depth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting the data into test and training data\n",
    "train, test = train_test_split(penguins, test_size = 0.3)\n",
    "train.shape, test.shape\n",
    "\n",
    "x_train = train.drop(['Species'], axis = 1)\n",
    "y_train = train['Species'].values\n",
    "\n",
    "x_test = test.drop(['Species'], axis = 1)\n",
    "y_test = test['Species'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dict with cross value score of each combination \n",
    "D = {}\n",
    "\n",
    "for i in range(len(combos)): \n",
    "    cols = list(combos[i])\n",
    "    x = check_column_score(cols)\n",
    "    D[i] = x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---- 85\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Flipper Length (mm)'), Score: 0.96899\n",
      "Test score is: 0.96939\n",
      "---- 16\n",
      "('Island', 'Culmen Length (mm)', 'Flipper Length (mm)'), Score: 0.96454\n",
      "Test score is: 0.96939\n",
      "---- 18\n",
      "('Island', 'Culmen Length (mm)', 'Sex'), Score: 0.96454\n",
      "Test score is: 0.97959\n",
      "---- 15\n",
      "('Island', 'Culmen Length (mm)', 'Culmen Depth (mm)'), Score: 0.95585\n",
      "Test score is: 0.9898\n",
      "---- 29\n",
      "('Island', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.95575\n",
      "Test score is: 0.95918\n",
      "---- 86\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Body Mass (g)'), Score: 0.9515\n",
      "Test score is: 0.9898\n",
      "---- 106\n",
      "('Culmen Depth (mm)', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.9515\n",
      "Test score is: 0.95918\n",
      "---- 98\n",
      "('Culmen Length (mm)', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.9513\n",
      "Test score is: 0.92857\n",
      "---- 20\n",
      "('Island', 'Culmen Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.95121\n",
      "Test score is: 0.92857\n",
      "---- 89\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Delta 13 C (o/oo)'), Score: 0.94715\n",
      "Test score is: 0.96939\n"
     ]
    }
   ],
   "source": [
    "# Sorts D and shows the top 10 column combinations \n",
    "L = list(D.items())\n",
    "L.sort(key = lambda tup: tup[1], reverse = True)\n",
    "\n",
    "#show 10 best scores\n",
    "best = L[0:10]\n",
    "\n",
    "for where, score in best:\n",
    "    print(\"---- \" + str(where))\n",
    "    print(str(combos[where]) + \", Score: \" + str(np.round(score, 5)))\n",
    "    test_score = test_column_score(combos[where])\n",
    "    print(\"Test score is: \" + str(np.round(test_score, 5)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the above output, we believe that the column combination that has both the best cross evaluation score and the best test score is the combination at the 15th row of combos, which includes Island, Culmen Length, and Culmen Depth as its columns."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Getting the data that includes just out best columns (which are located at combos[15])\n",
    "X_train = train[list(combos[15])]\n",
    "X_test = test[list(combos[15])]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are going to use a decision tree model to try and predict penguin species. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9691699604743084\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#tree\n",
    "best_depth, best_score = tree_best_depth()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#decision tree model\n",
    "T = tree.DecisionTreeClassifier(max_depth = best_depth)\n",
    "T.fit(X_train, y_train)\n",
    "tree_score = T.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score: 0.9795918367346939\n"
     ]
    }
   ],
   "source": [
    "dtm_score.append(tree_score)\n",
    "t_depth.append(best_depth)\n",
    "print('Test score: '+ str(tree_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1, figsize = (10, 10))\n",
    "p = tree.plot_tree(T, \n",
    "                   filled = True, \n",
    "                   feature_names = penguins.drop(['Species'], axis = 1).columns)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are going to use a logistic regression model to try and predict penguin species. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9691699604743084\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "best_comp, best_score = best_complex()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#training lr model\n",
    "lr = LogisticRegression(max_iter = 1000, C = best_comp)\n",
    "lr.fit(X_train, y_train)\n",
    "lr_score = lr.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score: 0.9795918367346939\n"
     ]
    }
   ],
   "source": [
    "lrm_score.append(lr_score)\n",
    "lr_c.append(best_comp)\n",
    "print('Test score: '+ str(lr_score))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, we are going to use a multilayer perceptron classifier model to try and predict penguin species. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9559288537549406\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mlp_best_score, mlp_best_depth = mlp_depth()\n",
    "print(\"training score: \" + str(mlp_best_score))\n",
    "\n",
    "clf = MLPClassifier(hidden_layer_sizes=(18, 18, 18), max_iter=3000).fit(X_train, y_train)\n",
    "mlp_score = clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Score: 0.9897959183673469\n"
     ]
    }
   ],
   "source": [
    "mlpm_score.append(mlp_score)\n",
    "mlp_depths.append(mlp_best_depth)\n",
    "print(\"Test Score: \" + str(mlp_score))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Training Data with Logistic Regression "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "#functions to train data using logistric regression\n",
    "def check_column_scorecv(cols):\n",
    "    \"\"\"\n",
    "    Trains and evaluates a model via cross-validation on the columns of the data\n",
    "    with selected indices using logistic regression\n",
    "    \"\"\"\n",
    "    logreg = LogisticRegression(max_iter = 1000)\n",
    "    return cross_val_score(logreg, x_train[cols], y_train, cv = 5).mean()\n",
    "\n",
    "def test_column_scorecv(tupCol):\n",
    "    \"\"\"\n",
    "    Trains and evaluates a model on the test set using the columns of the data\n",
    "    with selected indices with logistic regreesion\n",
    "    \"\"\"\n",
    "    cols = list(tupCol)\n",
    "    logreg = LogisticRegression(max_iter = 1000)\n",
    "    logreg.fit(x_train[cols], y_train)\n",
    "    return logreg.score(x_test[cols], y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "E = {}\n",
    "for i in range(len(combos)): \n",
    "    cols = list(combos[i])\n",
    "    x = check_column_scorecv(cols)\n",
    "    E[i] = x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---- 87\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Sex'), Score: 0.98686\n",
      "Test score is: 0.9898\n",
      "---- 89\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Delta 13 C (o/oo)'), Score: 0.98686\n",
      "Test score is: 1.0\n",
      "---- 85\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Flipper Length (mm)'), Score: 0.98676\n",
      "Test score is: 0.97959\n",
      "---- 86\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Body Mass (g)'), Score: 0.98232\n",
      "Test score is: 0.9898\n",
      "---- 88\n",
      "('Culmen Length (mm)', 'Culmen Depth (mm)', 'Delta 15 N (o/oo)'), Score: 0.97797\n",
      "Test score is: 0.9898\n",
      "---- 18\n",
      "('Island', 'Culmen Length (mm)', 'Sex'), Score: 0.97333\n",
      "Test score is: 0.96939\n",
      "---- 43\n",
      "('Stage', 'Culmen Length (mm)', 'Culmen Depth (mm)'), Score: 0.96918\n",
      "Test score is: 0.94898\n",
      "---- 64\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Culmen Depth (mm)'), Score: 0.96918\n",
      "Test score is: 0.93878\n",
      "---- 19\n",
      "('Island', 'Culmen Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.96889\n",
      "Test score is: 0.95918\n",
      "---- 98\n",
      "('Culmen Length (mm)', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.96889\n",
      "Test score is: 0.96939\n",
      "---- 15\n",
      "('Island', 'Culmen Length (mm)', 'Culmen Depth (mm)'), Score: 0.96473\n",
      "Test score is: 0.96939\n",
      "---- 16\n",
      "('Island', 'Culmen Length (mm)', 'Flipper Length (mm)'), Score: 0.96454\n",
      "Test score is: 0.95918\n",
      "---- 91\n",
      "('Culmen Length (mm)', 'Flipper Length (mm)', 'Sex'), Score: 0.96454\n",
      "Test score is: 0.94898\n",
      "---- 92\n",
      "('Culmen Length (mm)', 'Flipper Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.96454\n",
      "Test score is: 0.95918\n",
      "---- 93\n",
      "('Culmen Length (mm)', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.96454\n",
      "Test score is: 0.97959\n",
      "---- 44\n",
      "('Stage', 'Culmen Length (mm)', 'Flipper Length (mm)'), Score: 0.9601\n",
      "Test score is: 0.94898\n",
      "---- 65\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Flipper Length (mm)'), Score: 0.9601\n",
      "Test score is: 0.94898\n",
      "---- 99\n",
      "('Culmen Length (mm)', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.96\n",
      "Test score is: 0.97959\n",
      "---- 103\n",
      "('Culmen Depth (mm)', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.95594\n",
      "Test score is: 0.96939\n",
      "---- 17\n",
      "('Island', 'Culmen Length (mm)', 'Body Mass (g)'), Score: 0.95575\n",
      "Test score is: 0.96939\n",
      "---- 94\n",
      "('Culmen Length (mm)', 'Body Mass (g)', 'Sex'), Score: 0.95575\n",
      "Test score is: 0.97959\n",
      "---- 1\n",
      "('Island', 'Stage', 'Culmen Length (mm)'), Score: 0.95556\n",
      "Test score is: 0.94898\n",
      "---- 8\n",
      "('Island', 'Clutch Completion', 'Culmen Length (mm)'), Score: 0.95556\n",
      "Test score is: 0.95918\n",
      "---- 29\n",
      "('Island', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.9515\n",
      "Test score is: 0.96939\n",
      "---- 90\n",
      "('Culmen Length (mm)', 'Flipper Length (mm)', 'Body Mass (g)'), Score: 0.9514\n",
      "Test score is: 0.84694\n",
      "---- 97\n",
      "('Culmen Length (mm)', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.95121\n",
      "Test score is: 0.95918\n",
      "---- 20\n",
      "('Island', 'Culmen Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.95111\n",
      "Test score is: 0.9898\n",
      "---- 95\n",
      "('Culmen Length (mm)', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.94251\n",
      "Test score is: 0.93878\n",
      "---- 114\n",
      "('Flipper Length (mm)', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.93826\n",
      "Test score is: 0.95918\n",
      "---- 115\n",
      "('Flipper Length (mm)', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.93816\n",
      "Test score is: 0.94898\n",
      "---- 68\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.93343\n",
      "Test score is: 0.92857\n",
      "---- 108\n",
      "('Culmen Depth (mm)', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.92928\n",
      "Test score is: 0.93878\n",
      "---- 78\n",
      "('Clutch Completion', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.92918\n",
      "Test score is: 0.95918\n",
      "---- 47\n",
      "('Stage', 'Culmen Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.92899\n",
      "Test score is: 0.91837\n",
      "---- 57\n",
      "('Stage', 'Flipper Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.92483\n",
      "Test score is: 0.94898\n",
      "---- 96\n",
      "('Culmen Length (mm)', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.92454\n",
      "Test score is: 0.93878\n",
      "---- 48\n",
      "('Stage', 'Culmen Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.91575\n",
      "Test score is: 0.96939\n",
      "---- 69\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Delta 13 C (o/oo)'), Score: 0.91575\n",
      "Test score is: 0.97959\n",
      "---- 25\n",
      "('Island', 'Culmen Depth (mm)', 'Delta 13 C (o/oo)'), Score: 0.91169\n",
      "Test score is: 0.93878\n",
      "---- 74\n",
      "('Clutch Completion', 'Culmen Depth (mm)', 'Delta 13 C (o/oo)'), Score: 0.91159\n",
      "Test score is: 0.92857\n",
      "---- 45\n",
      "('Stage', 'Culmen Length (mm)', 'Body Mass (g)'), Score: 0.9114\n",
      "Test score is: 0.94898\n",
      "---- 66\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Body Mass (g)'), Score: 0.9114\n",
      "Test score is: 0.94898\n",
      "---- 53\n",
      "('Stage', 'Culmen Depth (mm)', 'Delta 13 C (o/oo)'), Score: 0.90725\n",
      "Test score is: 0.92857\n",
      "---- 109\n",
      "('Culmen Depth (mm)', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.89391\n",
      "Test score is: 0.92857\n",
      "---- 35\n",
      "('Island', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.88928\n",
      "Test score is: 0.88776\n",
      "---- 102\n",
      "('Culmen Depth (mm)', 'Flipper Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.87623\n",
      "Test score is: 0.87755\n",
      "---- 113\n",
      "('Flipper Length (mm)', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.86734\n",
      "Test score is: 0.86735\n",
      "---- 32\n",
      "('Island', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.86309\n",
      "Test score is: 0.73469\n",
      "---- 28\n",
      "('Island', 'Flipper Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.863\n",
      "Test score is: 0.84694\n",
      "---- 77\n",
      "('Clutch Completion', 'Flipper Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.863\n",
      "Test score is: 0.87755\n",
      "---- 56\n",
      "('Stage', 'Flipper Length (mm)', 'Delta 15 N (o/oo)'), Score: 0.85855\n",
      "Test score is: 0.85714\n",
      "---- 112\n",
      "('Flipper Length (mm)', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.85855\n",
      "Test score is: 0.84694\n",
      "---- 7\n",
      "('Island', 'Stage', 'Delta 13 C (o/oo)'), Score: 0.84077\n",
      "Test score is: 0.82653\n",
      "---- 34\n",
      "('Island', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.84077\n",
      "Test score is: 0.82653\n",
      "---- 14\n",
      "('Island', 'Clutch Completion', 'Delta 13 C (o/oo)'), Score: 0.84068\n",
      "Test score is: 0.82653\n",
      "---- 118\n",
      "('Body Mass (g)', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.84048\n",
      "Test score is: 0.84694\n",
      "---- 106\n",
      "('Culmen Depth (mm)', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.84029\n",
      "Test score is: 0.95918\n",
      "---- 55\n",
      "('Stage', 'Flipper Length (mm)', 'Sex'), Score: 0.81874\n",
      "Test score is: 0.78571\n",
      "---- 27\n",
      "('Island', 'Flipper Length (mm)', 'Sex'), Score: 0.81865\n",
      "Test score is: 0.80612\n",
      "---- 101\n",
      "('Culmen Depth (mm)', 'Flipper Length (mm)', 'Sex'), Score: 0.81865\n",
      "Test score is: 0.80612\n",
      "---- 70\n",
      "('Clutch Completion', 'Culmen Depth (mm)', 'Flipper Length (mm)'), Score: 0.81855\n",
      "Test score is: 0.80612\n",
      "---- 107\n",
      "('Culmen Depth (mm)', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.81845\n",
      "Test score is: 0.83673\n",
      "---- 119\n",
      "('Sex', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.8143\n",
      "Test score is: 0.86735\n",
      "---- 21\n",
      "('Island', 'Culmen Depth (mm)', 'Flipper Length (mm)'), Score: 0.81411\n",
      "Test score is: 0.81633\n",
      "---- 67\n",
      "('Clutch Completion', 'Culmen Length (mm)', 'Sex'), Score: 0.81411\n",
      "Test score is: 0.7551\n",
      "---- 10\n",
      "('Island', 'Clutch Completion', 'Flipper Length (mm)'), Score: 0.80976\n",
      "Test score is: 0.80612\n",
      "---- 76\n",
      "('Clutch Completion', 'Flipper Length (mm)', 'Sex'), Score: 0.80976\n",
      "Test score is: 0.78571\n",
      "---- 49\n",
      "('Stage', 'Culmen Depth (mm)', 'Flipper Length (mm)'), Score: 0.80966\n",
      "Test score is: 0.81633\n",
      "---- 38\n",
      "('Stage', 'Clutch Completion', 'Flipper Length (mm)'), Score: 0.80541\n",
      "Test score is: 0.80612\n",
      "---- 63\n",
      "('Stage', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.80116\n",
      "Test score is: 0.85714\n",
      "---- 84\n",
      "('Clutch Completion', 'Delta 15 N (o/oo)', 'Delta 13 C (o/oo)'), Score: 0.79671\n",
      "Test score is: 0.86735\n",
      "---- 22\n",
      "('Island', 'Culmen Depth (mm)', 'Body Mass (g)'), Score: 0.79643\n",
      "Test score is: 0.77551\n",
      "---- 24\n",
      "('Island', 'Culmen Depth (mm)', 'Delta 15 N (o/oo)'), Score: 0.79643\n",
      "Test score is: 0.85714\n",
      "---- 50\n",
      "('Stage', 'Culmen Depth (mm)', 'Body Mass (g)'), Score: 0.79643\n",
      "Test score is: 0.77551\n",
      "---- 104\n",
      "('Culmen Depth (mm)', 'Body Mass (g)', 'Sex'), Score: 0.79643\n",
      "Test score is: 0.77551\n",
      "---- 71\n",
      "('Clutch Completion', 'Culmen Depth (mm)', 'Body Mass (g)'), Score: 0.78763\n",
      "Test score is: 0.77551\n",
      "---- 3\n",
      "('Island', 'Stage', 'Flipper Length (mm)'), Score: 0.78754\n",
      "Test score is: 0.79592\n",
      "---- 79\n",
      "('Clutch Completion', 'Body Mass (g)', 'Sex'), Score: 0.78734\n",
      "Test score is: 0.7449\n",
      "---- 51\n",
      "('Stage', 'Culmen Depth (mm)', 'Sex'), Score: 0.78319\n",
      "Test score is: 0.7551\n",
      "---- 105\n",
      "('Culmen Depth (mm)', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.7829\n",
      "Test score is: 0.77551\n",
      "---- 117\n",
      "('Body Mass (g)', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.7829\n",
      "Test score is: 0.7551\n",
      "---- 46\n",
      "('Stage', 'Culmen Length (mm)', 'Sex'), Score: 0.77865\n",
      "Test score is: 0.7551\n",
      "---- 72\n",
      "('Clutch Completion', 'Culmen Depth (mm)', 'Sex'), Score: 0.77865\n",
      "Test score is: 0.73469\n",
      "---- 111\n",
      "('Flipper Length (mm)', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.77845\n",
      "Test score is: 0.72449\n",
      "---- 23\n",
      "('Island', 'Culmen Depth (mm)', 'Sex'), Score: 0.76976\n",
      "Test score is: 0.76531\n",
      "---- 52\n",
      "('Stage', 'Culmen Depth (mm)', 'Delta 15 N (o/oo)'), Score: 0.76976\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score is: 0.84694\n",
      "---- 73\n",
      "('Clutch Completion', 'Culmen Depth (mm)', 'Delta 15 N (o/oo)'), Score: 0.76976\n",
      "Test score is: 0.83673\n",
      "---- 2\n",
      "('Island', 'Stage', 'Culmen Depth (mm)'), Score: 0.76116\n",
      "Test score is: 0.7449\n",
      "---- 9\n",
      "('Island', 'Clutch Completion', 'Culmen Depth (mm)'), Score: 0.76106\n",
      "Test score is: 0.77551\n",
      "---- 100\n",
      "('Culmen Depth (mm)', 'Flipper Length (mm)', 'Body Mass (g)'), Score: 0.76106\n",
      "Test score is: 0.83673\n",
      "---- 116\n",
      "('Body Mass (g)', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.76106\n",
      "Test score is: 0.7551\n",
      "---- 31\n",
      "('Island', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.76097\n",
      "Test score is: 0.66327\n",
      "---- 36\n",
      "('Stage', 'Clutch Completion', 'Culmen Length (mm)'), Score: 0.76087\n",
      "Test score is: 0.7551\n",
      "---- 80\n",
      "('Clutch Completion', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.75662\n",
      "Test score is: 0.68367\n",
      "---- 59\n",
      "('Stage', 'Body Mass (g)', 'Delta 15 N (o/oo)'), Score: 0.75643\n",
      "Test score is: 0.68367\n",
      "---- 11\n",
      "('Island', 'Clutch Completion', 'Body Mass (g)'), Score: 0.75633\n",
      "Test score is: 0.66327\n",
      "---- 6\n",
      "('Island', 'Stage', 'Delta 15 N (o/oo)'), Score: 0.75208\n",
      "Test score is: 0.78571\n",
      "---- 33\n",
      "('Island', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.74754\n",
      "Test score is: 0.78571\n",
      "---- 13\n",
      "('Island', 'Clutch Completion', 'Delta 15 N (o/oo)'), Score: 0.74329\n",
      "Test score is: 0.78571\n",
      "---- 37\n",
      "('Stage', 'Clutch Completion', 'Culmen Depth (mm)'), Score: 0.74319\n",
      "Test score is: 0.76531\n",
      "---- 81\n",
      "('Clutch Completion', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.74309\n",
      "Test score is: 0.69388\n",
      "---- 60\n",
      "('Stage', 'Body Mass (g)', 'Delta 13 C (o/oo)'), Score: 0.73865\n",
      "Test score is: 0.69388\n",
      "---- 110\n",
      "('Flipper Length (mm)', 'Body Mass (g)', 'Sex'), Score: 0.73469\n",
      "Test score is: 0.70408\n",
      "---- 30\n",
      "('Island', 'Body Mass (g)', 'Sex'), Score: 0.72976\n",
      "Test score is: 0.73469\n",
      "---- 39\n",
      "('Stage', 'Clutch Completion', 'Body Mass (g)'), Score: 0.71227\n",
      "Test score is: 0.66327\n",
      "---- 75\n",
      "('Clutch Completion', 'Flipper Length (mm)', 'Body Mass (g)'), Score: 0.70783\n",
      "Test score is: 0.65306\n",
      "---- 58\n",
      "('Stage', 'Body Mass (g)', 'Sex'), Score: 0.70754\n",
      "Test score is: 0.7449\n",
      "---- 26\n",
      "('Island', 'Flipper Length (mm)', 'Body Mass (g)'), Score: 0.69903\n",
      "Test score is: 0.66327\n",
      "---- 12\n",
      "('Island', 'Clutch Completion', 'Sex'), Score: 0.69014\n",
      "Test score is: 0.67347\n",
      "---- 0\n",
      "('Island', 'Stage', 'Clutch Completion'), Score: 0.69014\n",
      "Test score is: 0.67347\n",
      "---- 54\n",
      "('Stage', 'Flipper Length (mm)', 'Body Mass (g)'), Score: 0.69005\n",
      "Test score is: 0.65306\n",
      "---- 4\n",
      "('Island', 'Stage', 'Body Mass (g)'), Score: 0.68589\n",
      "Test score is: 0.64286\n",
      "---- 5\n",
      "('Island', 'Stage', 'Sex'), Score: 0.66367\n",
      "Test score is: 0.64286\n",
      "---- 61\n",
      "('Stage', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.65932\n",
      "Test score is: 0.72449\n",
      "---- 82\n",
      "('Clutch Completion', 'Sex', 'Delta 15 N (o/oo)'), Score: 0.65932\n",
      "Test score is: 0.7449\n",
      "---- 41\n",
      "('Stage', 'Clutch Completion', 'Delta 15 N (o/oo)'), Score: 0.64628\n",
      "Test score is: 0.71429\n",
      "---- 42\n",
      "('Stage', 'Clutch Completion', 'Delta 13 C (o/oo)'), Score: 0.64126\n",
      "Test score is: 0.71429\n",
      "---- 83\n",
      "('Clutch Completion', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.61923\n",
      "Test score is: 0.72449\n",
      "---- 62\n",
      "('Stage', 'Sex', 'Delta 13 C (o/oo)'), Score: 0.61488\n",
      "Test score is: 0.68367\n",
      "---- 40\n",
      "('Stage', 'Clutch Completion', 'Sex'), Score: 0.35401\n",
      "Test score is: 0.41837\n"
     ]
    }
   ],
   "source": [
    "M = list(E.items())\n",
    "M.sort(key = lambda tup: tup[1], reverse = True)\n",
    "\n",
    "best = M\n",
    "\n",
    "for where, score in best:\n",
    "    print(\"---- \" + str(where))\n",
    "    print(str(combos[where]) + \", Score: \" + str(np.round(score, 5)))\n",
    "    test_score = test_column_scorecv(combos[where])\n",
    "    print(\"Test score is: \" + str(np.round(test_score, 5)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "#testing models \n",
    "X_train = train[list(combos[89])]\n",
    "X_test = test[list(combos[89])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9600790513833992\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#tree\n",
    "best_depth, best_score = tree_best_depth()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#decision tree model\n",
    "T = tree.DecisionTreeClassifier(max_depth = best_depth)\n",
    "T.fit(X_train, y_train)\n",
    "tree_score = T.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Score: )0.9693877551020408\n"
     ]
    }
   ],
   "source": [
    "dtm_score.append(tree_score)\n",
    "t_depth.append(best_depth)\n",
    "print('Test Score: )' + str(tree_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9600790513833992\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#logistic regression\n",
    "best_comp, best_score = best_complex()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#training lr model\n",
    "lr = LogisticRegression(max_iter = 1000, C = best_comp)\n",
    "lr.fit(X_train, y_train)\n",
    "lr_score = lr.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score: 1.0\n"
     ]
    }
   ],
   "source": [
    "lrm_score.append(lr_score)\n",
    "lr_c.append(best_comp)\n",
    "print('Test score: '+ str(lr_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9642292490118578\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#multilayer perception model\n",
    "mlp_best_score, mlp_best_depth = mlp_depth()\n",
    "print(\"training score: \" + str(mlp_best_score))\n",
    "\n",
    "clf = MLPClassifier(hidden_layer_sizes=(18, 18, 18), max_iter=3000).fit(X_train, y_train)\n",
    "mlp_score = clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Score: 1.0\n"
     ]
    }
   ],
   "source": [
    "mlpm_score.append(mlp_score)\n",
    "mlp_depths.append(mlp_best_depth)\n",
    "print(\"Test Score: \" + str(mlp_score))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Selecting Features Using High Feature Method"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Stage nan\n",
      "Flipper Length (mm) 381.35428355708325\n",
      "Culmen Length (mm) 259.3512209159328\n",
      "Body Mass (g) 238.6448173442045\n",
      "Culmen Depth (mm) 236.29472665171613\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py:114: UserWarning: Features [1] are constant.\n",
      "  warnings.warn(\"Features %s are constant.\" % constant_features_idx,\n",
      "/opt/anaconda3/lib/python3.8/site-packages/sklearn/feature_selection/_univariate_selection.py:116: RuntimeWarning: invalid value encountered in true_divide\n",
      "  f = msb / msw\n"
     ]
    }
   ],
   "source": [
    "threshold = 5 # the number of most relevant features\n",
    "high_score_features = []\n",
    "feature_scores = f_classif(x_train, y_train)[0]\n",
    "for score, f_name in sorted(zip(feature_scores, x_train.columns), reverse=True)[:threshold]:\n",
    "      print(f_name, score)\n",
    "      high_score_features.append(f_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We decided to go with the features culmen length, culmen depth and sex. We chose these features because culmen length and depth were scored highly while sex is a binarized characteristic and we wanted to see it's effectiveness. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = train[['Culmen Length (mm)', 'Culmen Depth (mm)', 'Sex']]\n",
    "X_test = test[['Culmen Length (mm)', 'Culmen Depth (mm)', 'Sex']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9648221343873518\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#tree\n",
    "best_depth, best_score = tree_best_depth()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#decision tree model\n",
    "T = tree.DecisionTreeClassifier(max_depth = best_depth)\n",
    "T.fit(X_train, y_train)\n",
    "tree_score = T.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Score: 0.9489795918367347\n"
     ]
    }
   ],
   "source": [
    "dtm_score.append(tree_score)\n",
    "t_depth.append(best_depth)\n",
    "print('Test Score: ' + str(tree_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.9648221343873518\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#logistic regression\n",
    "best_comp, best_score = best_complex()\n",
    "print(\"training score: \" + str(best_score))\n",
    "\n",
    "#training lr model\n",
    "lr = LogisticRegression(max_iter = 1000, C = best_comp)\n",
    "lr.fit(X_train, y_train)\n",
    "lr_score = lr.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test score: 0.9897959183673469\n"
     ]
    }
   ],
   "source": [
    "lrm_score.append(lr_score)\n",
    "lr_c.append(best_comp)\n",
    "print('Test score: '+ str(lr_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "training score: 0.924703557312253\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#multilayer perception model\n",
    "mlp_best_score, mlp_best_depth = mlp_depth()\n",
    "print(\"training score: \" + str(mlp_best_score))\n",
    "\n",
    "clf = MLPClassifier(hidden_layer_sizes=(18, 18, 18), max_iter=3000).fit(X_train, y_train)\n",
    "mlp_score = clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test Score: 0.9897959183673469\n"
     ]
    }
   ],
   "source": [
    "mlpm_score.append(mlp_score)\n",
    "mlp_depths.append(mlp_best_depth)\n",
    "print(\"Test Score: \" + str(mlp_score))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "clf.fit(X_train, y_train)\n",
    "y_train_pred = clf.predict(X_train)\n",
    "c = confusion_matrix(y_train, y_train_pred)\n",
    "\n",
    "disp = plot_confusion_matrix(clf, X_test, y_test, cmap = plt.cm.Blues)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the confusion matrix, we can see that there were a few penguins that were labeled wrong and it may have been due to factors such as size. This also may be due to the sex not being a strong factor."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conclusion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9795918367346939, 0.9693877551020408, 0.9489795918367347]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtm_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9795918367346939, 1.0, 0.9897959183673469]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lrm_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9897959183673469, 1.0, 0.9897959183673469]"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mlpm_score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the code above we can see that the first index of each list is the highest value in the list. This means that training our data using cross validation with the decision tree is the most effective. Across all training methods, the logistric regression model has the most consistent and highest scores. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[21, 8, 23]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_depth"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1.62, 1.1925000000000001, 0.9075]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr_c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[24, 19, 29]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mlp_depths"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looking at the code above, we see that the best depth and complexities for each model will change. The best depth for the decision tree wavers depending on the set. The best complexity for logistic regression seems to be around 1. Lastly the best depth for MLP is around 24. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Contribution Statement: \n",
    "Rashi, David, and Lauren each did one model and one figure. \n",
    "Lauren made figure 1. \n",
    "Rashi made figure 2.\n",
    "David made figure 3.\n",
    "David made the table, parts 1 and 2. \n",
    "Rashi made the decision tree diagram and decision tree model.\n",
    "David made the logistic regression model.\n",
    "Lauren and Rashi made the MLP model. \n",
    "Lauren did the confusion matrix.\n",
    "David did the conclusion. \n",
    "We each found a method of finding the best combination. Rashi did the decision tree cross validation, David used the logistic regression cross validation and Lauren used high feature.\n",
    "Rashi and David combined all the group work together. \n",
    "We all also worked on the explanations together. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
